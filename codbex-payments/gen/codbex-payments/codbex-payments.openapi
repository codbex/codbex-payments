openapi: 3.0.3
info:
  title: Payments Management Application - OpenAPI 3.0
  version: 1.0.0
  description: Managing payments data
externalDocs:
  description: Find out more about Eclipse Dirigible
  url: https://dirigible.io
servers:
  - url: /services/ts
tags:
  - name: CustomerPayment
  - name: SupplierPayment
  - name: EmployeePayment
  - name: PaymentRecord
  - name: Settings
  - name: Settings
  - name: Settings
  - name: PaymentAdjustment
paths:
  /codbex-payments/gen/codbex-payments/api/CustomerPayment/CustomerPaymentService.ts:
    get:
      summary: List CustomerPayment
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - CustomerPayment
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/CustomerPayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create CustomerPayment
      tags:
        - CustomerPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPayment'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/CustomerPayment/CustomerPaymentService.ts/{id}:
    get:
      summary: Get CustomerPayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - CustomerPayment
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/CustomerPayment'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update CustomerPayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - CustomerPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPayment'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete CustomerPayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - CustomerPayment
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/CustomerPayment/CustomerPaymentService.ts/count:
    get:
      summary: Count the number of CustomerPayment
      tags:
        - CustomerPayment
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of CustomerPayment by CustomerPaymentFilterOptions
      tags:
        - CustomerPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPaymentFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/CustomerPayment/CustomerPaymentService.ts/search:
    post:
      summary: Search CustomerPayment by CustomerPaymentFilterOptions
      tags:
        - CustomerPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerPaymentFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/CustomerPayment'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/SupplierPayment/SupplierPaymentService.ts:
    get:
      summary: List SupplierPayment
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - SupplierPayment
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SupplierPayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create SupplierPayment
      tags:
        - SupplierPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierPayment'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierPayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/SupplierPayment/SupplierPaymentService.ts/{id}:
    get:
      summary: Get SupplierPayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - SupplierPayment
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SupplierPayment'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update SupplierPayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - SupplierPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierPayment'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplierPayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete SupplierPayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - SupplierPayment
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/SupplierPayment/SupplierPaymentService.ts/count:
    get:
      summary: Count the number of SupplierPayment
      tags:
        - SupplierPayment
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of SupplierPayment by SupplierPaymentFilterOptions
      tags:
        - SupplierPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierPaymentFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/SupplierPayment/SupplierPaymentService.ts/search:
    post:
      summary: Search SupplierPayment by SupplierPaymentFilterOptions
      tags:
        - SupplierPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SupplierPaymentFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/SupplierPayment'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/EmployeePayment/EmployeePaymentService.ts:
    get:
      summary: List EmployeePayment
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - EmployeePayment
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/EmployeePayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create EmployeePayment
      tags:
        - EmployeePayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayment'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/EmployeePayment/EmployeePaymentService.ts/{id}:
    get:
      summary: Get EmployeePayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - EmployeePayment
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/EmployeePayment'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update EmployeePayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - EmployeePayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayment'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete EmployeePayment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - EmployeePayment
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/EmployeePayment/EmployeePaymentService.ts/count:
    get:
      summary: Count the number of EmployeePayment
      tags:
        - EmployeePayment
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of EmployeePayment by EmployeePaymentFilterOptions
      tags:
        - EmployeePayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePaymentFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/EmployeePayment/EmployeePaymentService.ts/search:
    post:
      summary: Search EmployeePayment by EmployeePaymentFilterOptions
      tags:
        - EmployeePayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePaymentFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      Name: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/EmployeePayment'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/PaymentRecord/PaymentRecordService.ts:
    get:
      summary: List PaymentRecord
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - PaymentRecord
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentRecord'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PaymentRecord
      tags:
        - PaymentRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRecord'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRecord'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/PaymentRecord/PaymentRecordService.ts/{id}:
    get:
      summary: Get PaymentRecord by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PaymentRecord
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentRecord'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PaymentRecord by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PaymentRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRecord'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRecord'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PaymentRecord by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PaymentRecord
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/PaymentRecord/PaymentRecordService.ts/count:
    get:
      summary: Count the number of PaymentRecord
      tags:
        - PaymentRecord
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PaymentRecord by PaymentRecordFilterOptions
      tags:
        - PaymentRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRecordFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/PaymentRecord/PaymentRecordService.ts/search:
    post:
      summary: Search PaymentRecord by PaymentRecordFilterOptions
      tags:
        - PaymentRecord
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRecordFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      CompanyIBAN: "abcd"
                      CounterpartyIBAN: "abcd"
                      CounterpartyName: "abcd"
                      Reason: "abcd"
                      Description: "abcd"
                      UUID: "abcd"
                      Reference: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentRecord'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/Settings/PaymentRecordDirectionService.ts:
    get:
      summary: List PaymentRecordDirection
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentRecordDirection'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PaymentRecordDirection
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRecordDirection'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRecordDirection'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/Settings/PaymentRecordDirectionService.ts/{id}:
    get:
      summary: Get PaymentRecordDirection by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentRecordDirection'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PaymentRecordDirection by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRecordDirection'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentRecordDirection'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PaymentRecordDirection by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/Settings/PaymentRecordDirectionService.ts/count:
    get:
      summary: Count the number of PaymentRecordDirection
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PaymentRecordDirection by PaymentRecordDirectionFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRecordDirectionFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/Settings/PaymentRecordDirectionService.ts/search:
    post:
      summary: Search PaymentRecordDirection by PaymentRecordDirectionFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRecordDirectionFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentRecordDirection'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/Settings/PaymentStatusService.ts:
    get:
      summary: List PaymentStatus
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PaymentStatus
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatus'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/Settings/PaymentStatusService.ts/{id}:
    get:
      summary: Get PaymentStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentStatus'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PaymentStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatus'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentStatus'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PaymentStatus by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/Settings/PaymentStatusService.ts/count:
    get:
      summary: Count the number of PaymentStatus
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PaymentStatus by PaymentStatusFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatusFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/Settings/PaymentStatusService.ts/search:
    post:
      summary: Search PaymentStatus by PaymentStatusFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentStatusFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentStatus'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/Settings/PaymentTypeService.ts:
    get:
      summary: List PaymentType
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentType'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PaymentType
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentType'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentType'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/Settings/PaymentTypeService.ts/{id}:
    get:
      summary: Get PaymentType by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentType'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PaymentType by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentType'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentType'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PaymentType by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - Settings
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/Settings/PaymentTypeService.ts/count:
    get:
      summary: Count the number of PaymentType
      tags:
        - Settings
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PaymentType by PaymentTypeFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTypeFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/Settings/PaymentTypeService.ts/search:
    post:
      summary: Search PaymentType by PaymentTypeFilterOptions
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentTypeFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Name: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Name: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentType'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/PaymentAdjustment/PaymentAdjustmentService.ts:
    get:
      summary: List PaymentAdjustment
      parameters:
        - in: query
          name: $limit
          description: The number of records to be returned _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
        - in: query
          name: $offset
          description: The number of records to skip _(both `$limit` and `$offset` should be provided)_.
          required: false
          allowReserved: true
          schema:
            type: integer
            allowEmptyValue: true
      tags:
        - PaymentAdjustment
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentAdjustment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create PaymentAdjustment
      tags:
        - PaymentAdjustment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAdjustment'
        required: true
      responses:
        201:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAdjustment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/PaymentAdjustment/PaymentAdjustmentService.ts/{id}:
    get:
      summary: Get PaymentAdjustment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PaymentAdjustment
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentAdjustment'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update PaymentAdjustment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PaymentAdjustment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAdjustment'
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentAdjustment'
        400:
          description: Bad Request Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete PaymentAdjustment by Id
      parameters:
        - in: path
          name: id
          description: The Id of the entity.
          required: true
          schema:
            type: string
      tags:
        - PaymentAdjustment
      responses:
        204:
          description: Successful Request
        404:
          description: Entity Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/PaymentAdjustment/PaymentAdjustmentService.ts/count:
    get:
      summary: Count the number of PaymentAdjustment
      tags:
        - PaymentAdjustment
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Count the number of PaymentAdjustment by PaymentAdjustmentFilterOptions
      tags:
        - PaymentAdjustment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAdjustmentFilterOptions'
            examples:
              countWithMultipleCriteria:
                summary: Count with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Reason: "abcd"
                      UUID: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              countWithEquals:
                summary: Count with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              countWithNotEquals:
                summary: Count with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              countWithContains:
                summary: Count with Contains
                value:
                  $filter:
                    contains:
                      Reason: "abcd"
                      UUID: "abcd"
              countWithGreaterThan:
                summary: Count with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              countWithGreaterThanOrEqual:
                summary: Count with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              countWithLessThan:
                summary: Count with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              countWithLessThanOrEqual:
                summary: Count with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: integer
                example: 100
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /codbex-payments/gen/codbex-payments/api/PaymentAdjustment/PaymentAdjustmentService.ts/search:
    post:
      summary: Search PaymentAdjustment by PaymentAdjustmentFilterOptions
      tags:
        - PaymentAdjustment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentAdjustmentFilterOptions'
            examples:
              searchWithMultipleCriteria:
                summary: Search with multiple criteria
                value:
                  $filter:
                    notEquals:
                      Id: 33
                    contains:
                      Reason: "abcd"
                      UUID: "abcd"
                    greaterThan:
                      Id: 0
                    lessThanOrEqual:
                      Id: 100
              searchWithEquals:
                summary: Search with Equals
                value:
                  $filter:
                    equals:
                      Id: 0
              searchWithNotEquals:
                summary: Search with Not Equals
                value:
                  $filter:
                    notEquals:
                      Id: 0
              searchWithContains:
                summary: Search with Contains
                value:
                  $filter:
                    contains:
                      Reason: "abcd"
                      UUID: "abcd"
              searchWithGreaterThan:
                summary: Search with Greater Than
                value:
                  $filter:
                    greaterThan:
                      Id: 0
              searchWithGreaterThanOrEqual:
                summary: Search with Greater Than Or Equal
                value:
                  $filter:
                    greaterThanOrEqual:
                      Id: 0
              searchWithLessThan:
                summary: Search with Less Than
                value:
                  $filter:
                    lessThan:
                      Id: 0
              searchWithLessThanOrEqual:
                summary: Search with Less Than Or Equal
                value:
                  $filter:
                    lessThanOrEqual:
                      Id: 0
        required: true
      responses:
        200:
          description: Successful Request
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/PaymentAdjustment'
        403:
          description: Forbidden Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    CustomerPayment:
      type: object
      required:
        - Customer
        - Date
        - Valor
        - Amount
        - Currency
        - Reason
      properties:
        Id:
          type: integer
          format: int32
        Customer:
          type: integer
          format: int32
        Date:
        Valor:
        CompanyIBAN:
          type: string
          minLength: 0
          maxLength: 34
        CounterpartyIBAN:
          type: string
          minLength: 0
          maxLength: 22
        CounterpartyName:
          type: string
          minLength: 0
          maxLength: 100
        Amount:
          type: number
          format: double
        Currency:
          type: integer
          format: int32
        Reason:
          type: string
          minLength: 0
          maxLength: 100
        Description:
          type: string
          minLength: 0
          maxLength: 100
        Company:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
          readOnly: true
        UUID:
          type: string
          minLength: 0
          maxLength: 36
          readOnly: true
        Reference:
          type: string
          minLength: 0
          maxLength: 36
        PaymentMethod:
          type: integer
          format: int32
    CustomerPaymentFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Customer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Valor:
                  oneOf:
                CompanyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 34
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 34
                CounterpartyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 22
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 22
                CounterpartyName:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Reason:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                PaymentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Customer:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Valor:
                  oneOf:
                CompanyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 34
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 34
                CounterpartyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 22
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 22
                CounterpartyName:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Reason:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                PaymentMethod:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
            contains:
              type: object
              properties:
                Id:
                Customer:
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 34
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                Currency:
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
                PaymentMethod:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 34
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
                PaymentMethod:
                  type: integer
                  format: int32
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 34
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
                PaymentMethod:
                  type: integer
                  format: int32
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 34
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
                PaymentMethod:
                  type: integer
                  format: int32
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Customer:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 34
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
                PaymentMethod:
                  type: integer
                  format: int32
        $select:
          type: array
          example: ["Id", "Customer", "Date", "Valor", "CompanyIBAN", "CounterpartyIBAN", "CounterpartyName", "Amount", "Currency", "Reason", "Description", "Company", "Name", "UUID", "Reference", "PaymentMethod"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Customer,Date,Valor,CompanyIBAN,CounterpartyIBAN,CounterpartyName,Amount,Currency,Reason,Description,Company,Name,UUID,Reference,PaymentMethod"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    SupplierPayment:
      type: object
      required:
        - Date
        - Valor
        - Amount
        - Currency
        - Reason
      properties:
        Id:
          type: integer
          format: int32
        Date:
        Valor:
        CompanyIBAN:
          type: string
          minLength: 0
          maxLength: 22
        CounterpartyIBAN:
          type: string
          minLength: 0
          maxLength: 22
        CounterpartyName:
          type: string
          minLength: 0
          maxLength: 100
        Amount:
          type: number
          format: double
        Currency:
          type: integer
          format: int32
        Reason:
          type: string
          minLength: 0
          maxLength: 100
        Description:
          type: string
          minLength: 0
          maxLength: 100
        Company:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
          readOnly: true
        UUID:
          type: string
          minLength: 0
          maxLength: 36
          readOnly: true
        Reference:
          type: string
          minLength: 0
          maxLength: 36
    SupplierPaymentFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Valor:
                  oneOf:
                CompanyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 22
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 22
                CounterpartyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 22
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 22
                CounterpartyName:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Reason:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Valor:
                  oneOf:
                CompanyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 22
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 22
                CounterpartyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 22
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 22
                CounterpartyName:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Reason:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            contains:
              type: object
              properties:
                Id:
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                Currency:
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
        $select:
          type: array
          example: ["Id", "Date", "Valor", "CompanyIBAN", "CounterpartyIBAN", "CounterpartyName", "Amount", "Currency", "Reason", "Description", "Company", "Name", "UUID", "Reference"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Date,Valor,CompanyIBAN,CounterpartyIBAN,CounterpartyName,Amount,Currency,Reason,Description,Company,Name,UUID,Reference"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    EmployeePayment:
      type: object
      required:
        - Date
        - Valor
        - Amount
        - Currency
        - Reason
      properties:
        Id:
          type: integer
          format: int32
        Date:
        Valor:
        CompanyIBAN:
          type: string
          minLength: 0
          maxLength: 50
        CounterpartyIBAN:
          type: string
          minLength: 0
          maxLength: 50
        CounterpartyName:
          type: string
          minLength: 0
          maxLength: 100
        Amount:
          type: number
          format: double
        Currency:
          type: integer
          format: int32
        Reason:
          type: string
          minLength: 0
          maxLength: 100
        Description:
          type: string
          minLength: 0
          maxLength: 100
        Company:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
          readOnly: true
        UUID:
          type: string
          minLength: 0
          maxLength: 36
          readOnly: true
        Reference:
          type: string
          minLength: 0
          maxLength: 36
    EmployeePaymentFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Valor:
                  oneOf:
                CompanyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                CounterpartyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                CounterpartyName:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Reason:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Valor:
                  oneOf:
                CompanyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                CounterpartyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 50
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 50
                CounterpartyName:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Reason:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            contains:
              type: object
              properties:
                Id:
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 50
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 50
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                Currency:
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 50
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 50
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 50
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 50
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 50
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 50
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 50
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 50
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
        $select:
          type: array
          example: ["Id", "Date", "Valor", "CompanyIBAN", "CounterpartyIBAN", "CounterpartyName", "Amount", "Currency", "Reason", "Description", "Company", "Name", "UUID", "Reference"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Date,Valor,CompanyIBAN,CounterpartyIBAN,CounterpartyName,Amount,Currency,Reason,Description,Company,Name,UUID,Reference"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PaymentRecord:
      type: object
      required:
        - Date
        - Valor
      properties:
        Id:
          type: integer
          format: int32
        Date:
        Valor:
        CompanyIBAN:
          type: string
          minLength: 0
          maxLength: 22
        CounterpartyIBAN:
          type: string
          minLength: 0
          maxLength: 22
        CounterpartyName:
          type: string
          minLength: 0
          maxLength: 100
        Amount:
          type: number
          format: double
        Currency:
          type: integer
          format: int32
        Reason:
          type: string
          minLength: 0
          maxLength: 100
        Description:
          type: string
          minLength: 0
          maxLength: 100
        Company:
          type: integer
          format: int32
        PaymentRecordDirection:
          type: integer
          format: int32
        PaymentStatus:
          type: integer
          format: int32
        PaymentType:
          type: integer
          format: int32
        UUID:
          type: string
          minLength: 0
          maxLength: 36
          readOnly: true
        Reference:
          type: string
          minLength: 0
          maxLength: 36
        Deleted:
          type: boolean
    PaymentRecordFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Valor:
                  oneOf:
                CompanyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 22
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 22
                CounterpartyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 22
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 22
                CounterpartyName:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Reason:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                PaymentRecordDirection:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                PaymentStatus:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                PaymentType:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Deleted:
                  oneOf:
                    - type: boolean
                    - type: array
                      items:
                        type: boolean
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Valor:
                  oneOf:
                CompanyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 22
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 22
                CounterpartyIBAN:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 22
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 22
                CounterpartyName:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Reason:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Description:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                PaymentRecordDirection:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                PaymentStatus:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                PaymentType:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Reference:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
                Deleted:
                  oneOf:
                    - type: boolean
                    - type: array
                      items:
                        type: boolean
            contains:
              type: object
              properties:
                Id:
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                Currency:
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                PaymentRecordDirection:
                PaymentStatus:
                PaymentType:
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
                Deleted:
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                PaymentRecordDirection:
                  type: integer
                  format: int32
                PaymentStatus:
                  type: integer
                  format: int32
                PaymentType:
                  type: integer
                  format: int32
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
                Deleted:
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                PaymentRecordDirection:
                  type: integer
                  format: int32
                PaymentStatus:
                  type: integer
                  format: int32
                PaymentType:
                  type: integer
                  format: int32
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
                Deleted:
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                PaymentRecordDirection:
                  type: integer
                  format: int32
                PaymentStatus:
                  type: integer
                  format: int32
                PaymentType:
                  type: integer
                  format: int32
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
                Deleted:
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                CompanyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyIBAN:
                  type: string
                  minLength: 0
                  maxLength: 22
                CounterpartyName:
                  type: string
                  minLength: 0
                  maxLength: 100
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                Description:
                  type: string
                  minLength: 0
                  maxLength: 100
                Company:
                  type: integer
                  format: int32
                PaymentRecordDirection:
                  type: integer
                  format: int32
                PaymentStatus:
                  type: integer
                  format: int32
                PaymentType:
                  type: integer
                  format: int32
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
                Reference:
                  type: string
                  minLength: 0
                  maxLength: 36
                Deleted:
        $select:
          type: array
          example: ["Id", "Date", "Valor", "CompanyIBAN", "CounterpartyIBAN", "CounterpartyName", "Amount", "Currency", "Reason", "Description", "Company", "PaymentRecordDirection", "PaymentStatus", "PaymentType", "UUID", "Reference", "Deleted"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Date,Valor,CompanyIBAN,CounterpartyIBAN,CounterpartyName,Amount,Currency,Reason,Description,Company,PaymentRecordDirection,PaymentStatus,PaymentType,UUID,Reference,Deleted"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PaymentRecordDirection:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
    PaymentRecordDirectionFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
        $select:
          type: array
          example: ["Id", "Name"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PaymentStatus:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
    PaymentStatusFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
        $select:
          type: array
          example: ["Id", "Name"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PaymentType:
      type: object
      required:
      properties:
        Id:
          type: integer
          format: int32
        Name:
          type: string
          minLength: 0
          maxLength: 20
    PaymentTypeFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Name:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 20
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 20
            contains:
              type: object
              properties:
                Id:
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Name:
                  type: string
                  minLength: 0
                  maxLength: 20
        $select:
          type: array
          example: ["Id", "Name"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Name"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    PaymentAdjustment:
      type: object
      required:
        - Date
        - Valor
        - Amount
        - Currency
        - Company
      properties:
        Id:
          type: integer
          format: int32
        Date:
        Valor:
        Amount:
          type: number
          format: double
        Currency:
          type: integer
          format: int32
        Company:
          type: integer
          format: int32
        Reason:
          type: string
          minLength: 0
          maxLength: 100
        UUID:
          type: string
          minLength: 0
          maxLength: 36
          readOnly: true
    PaymentAdjustmentFilterOptions:
      type: object
      properties:
        $filter:
          type: object
          properties:
            equals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Valor:
                  oneOf:
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Reason:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            notEquals:
              type: object
              properties:
                Id:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Date:
                  oneOf:
                Valor:
                  oneOf:
                Amount:
                  oneOf:
                    - type: number
                      format: double
                    - type: array
                      items:
                        type: number
                        format: double
                Currency:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Company:
                  oneOf:
                    - type: integer
                      format: int32
                    - type: array
                      items:
                        type: integer
                        format: int32
                Reason:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 100
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 100
                UUID:
                  oneOf:
                    - type: string
                      minLength: 0
                      maxLength: 36
                    - type: array
                      items:
                        type: string
                        format: double
                        minLength: 0
                        maxLength: 36
            contains:
              type: object
              properties:
                Id:
                Date:
                Valor:
                Amount:
                Currency:
                Company:
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
            greaterThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThan:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
            lessThanOrEqual:
              type: object
              properties:
                Id:
                  type: integer
                  format: int32
                Date:
                Valor:
                Amount:
                  type: number
                  format: double
                Currency:
                  type: integer
                  format: int32
                Company:
                  type: integer
                  format: int32
                Reason:
                  type: string
                  minLength: 0
                  maxLength: 100
                UUID:
                  type: string
                  minLength: 0
                  maxLength: 36
        $select:
          type: array
          example: ["Id", "Date", "Valor", "Amount", "Currency", "Company", "Reason", "UUID"]
          items:
            type: string
        $sort:
          - type: string
            example: "Id,Date,Valor,Amount,Currency,Company,Reason,UUID"
        $order:
          type: string
          enum: ["asc", "desc"]
          example: "asc"
        $offset:
          type: integer
          example: 0
        $limit:
          type: integer
          example: 10
    Error:
      type: object
      properties:
        code:
          type: integer
        message:
          type: string